# Poetry

[tool.poetry]
name = "generic-iterative-stemmer"
version = "1.1.4"
description = "A generic language stemming utility, dedicated for gensim word-embedding."
authors = ["Asaf Kali <asaf.kali@mail.huji.ac.il>"]
readme = "README.md"

[tool.poetry.urls]
Homepage = "https://github.com/asaf-kali/generic-iterative-stemmer"
Repository = "https://github.com/asaf-kali/generic-iterative-stemmer"
Issues = "https://github.com/asaf-kali/generic-iterative-stemmer/issues"

[tool.poetry.extras]
training = ["numpy", "pandas", "matplotlib", "fasttext-wheel", "editdistance", "tqdm"]

[tool.poetry.dependencies]
python = "^3.8"
the-spymaster-util = "^3.0"
gensim = "^4.1"
pydantic = "^1.9"

# Training
numpy = { version = "^1.21", optional = true }
pandas = { version = "^1.3", optional = true }
matplotlib = { version = "^3.5", optional = true }
fasttext-wheel = { version = "^0.9.2", optional = true }
editdistance = { version = "^0.6", optional = true }
tqdm = { version = "^4.62", optional = true }

[tool.poetry.group.test.dependencies]
pytest = "^6.2.5"
coverage = "^7.2.3"

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.13"
black = "^22.3"
isort = "^5.10"
mypy = "^0.981"
pylint = "^3.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.17"
jupyter = "^1.0"
requests = "^2.27"
twine = "^4.0.0"
python-semantic-release = "^8.0.8"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Release

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
commit_parser = "emoji"
build_command = "make build"
commit_author = "Semantic release <semantic-release>"
commit_message = "🤖 Release [{version}] [skip ci]"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.dev]
match = ".*"
prerelease = true
prerelease_token = "dev"

[tool.semantic_release.commit_parser_options]
major_tags = [
    "💥",
    "🚀",
    "🎉",
]
minor_tags = [
    "✨",
    "🔥",
    "🐲",
]
patch_tags = [
    "📝",
    "📜",
    "🏗️",
    "🛠️",
    "🐛",
    "🚑",
    "📌",
    "🌴",
]

# Test

[tool.pytest.ini_options]
addopts = "-s --disable-pytest-warnings --junitxml=junit.xml"

[tool.coverage.run]
source = ["generic_iterative_stemmer"]

# Lint

[tool.ruff]
line-length = 120
select = ["B", "C", "E", "F", "W"]
ignore = ["C416"]
exclude = ["local", ".deployment"]

[tool.black]
line-length = 120

[tool.isort]
skip = ["__init__.py"]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
exclude = ["build", "dist", "utils"]

[tool.pylint]
max-line-length = 120
good-names = [
    "by",
    "e",
    "i",
    "n",
    "x",
]
disable = [
    "C0114",
    "C0115",
    "C0116",
]
extension-pkg-allow-list = ["pydantic"]

[tool.pylint.MASTER]
#ignore-paths = '^some_path$'
